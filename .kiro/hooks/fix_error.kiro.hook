{
  "enabled": true,
  "name": "fix_error",
  "description": "Analyzes the root causes of the error message provided by the user and proposes a detailed error-fixing plan. Do not begin applying any fixes until receiving explicit permission from the user. If the error message is not provided, ask the user to supply it before proceeding.",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "**/*error*.log",
      "**/*error*.txt",
      "**/*error*.md",
      "**/logs/**",
      "**/*.log",
      "**/*exception*",
      "**/*traceback*",
      "**/*stderr*"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Please analyze the error by following these steps:\n\n1. **Read Related Files**: Examine the error file and any related source files to understand the context.\n2. **Root Cause Analysis**: Identify the underlying cause of the problem by reviewing relevant code, configuration, or documentation files.\n3. **Run Simple Tests**: Run fundamental tests to verify the root cause if needed.\n4. **Use Additional Tools**: For further investigation, use the `Context7`, `fetch`, `deepwiki`, or `sentry` MCP as needed.\n5. **Create Task**: Draft a task execution plan in `TASKS.MD`. If the problem is complex, use the `sequentialthinking` MCP.\n6. **Ask User Permission**: Request user permission before attempting to fix the error.\n7. **Fix Error**: Fix the error by following the previously planned task execution steps.\n8. **Verify Task Execution**: Confirm whether each task and subtask has been completed. Mark them with ✅ or ❌ in `TASKS.MD`.\n9. **Write Task Execution History**: Document the task execution report according to the guidance in `TASKS.MD`, and save it in `TASK_EXECUTE_HISTORY_FOLDER` with the filename `task-[Task Number].md`.\n\n\n**Task creation format**\n```\n- [ ] [Number]. [Task Title]\n  - [Sub-task description 1]\n  - [Sub-task description 2]\n  - [Sub-task description 3]\n  - [Additional sub-tasks as needed]\n```\n\n**Checked/Uncheck task example**\n```\n- [X] [Number]. [Task Title]\n  - ✅ [Sub-task description 1]\n  - ❌ [Sub-task description 2] \n  - [Sub-task description 3]\n  - [Additional sub-tasks as needed]\n```\n\n**Requirements**:\n* Ask user to provide error message if you don't know what to fix\n* Analyze the root causes thoroughly before writing the task\n* Include at least one sub-task under each major task\n* Follow the exact format shown in the task examples\n* Focus on actionable solutions\n* Ensure the task addresses the underlying problem, not just the symptoms\n* Start with the task execution plan before fixing anything\n* Always ask the user’s permission before executing the plan\n* Read specs and steering document if need more detail about the project\n\n**File Path**\n* `SPECS_FOLDER` = .kiro/specs/<TARGET_SPEC>\n* `STEERING_FOLDER` = .kiro/steering/ \n* `TASK_EXECUTE_HISTORY_FOLDER` = <SPECS_FOLDER>/task-execute-history\n* `TASKS.MD` = <SPECS_FOLDER>/tasks.md\n* `DESIGN.MD` = <SPECS_FOLDER>/design.md\n* `REQUIREMENTS.MD` = <SPECS_FOLDER>/design.md\n"
  }
}