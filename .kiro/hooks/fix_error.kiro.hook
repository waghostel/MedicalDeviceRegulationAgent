{
  "enabled": true,
  "name": "fix_error",
  "description": "Analyzes the root causes of the error message provided by the user and proposes a detailed error-fixing plan. Do not begin applying any fixes until receiving explicit permission from the user. If the error message is not provided, ask the user to supply it before proceeding.",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "**/*error*.log",
      "**/*error*.txt",
      "**/*error*.md",
      "**/logs/**",
      "**/*.log",
      "**/*exception*",
      "**/*traceback*",
      "**/*stderr*"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Please analyze the error by following these steps:\n\n1. **Read Related Files**: First, examine the error file and any related source files to understand the context\n2. **Root Cause Analysis**: Identify the underlying cause of the problem by reviewing relevant code, configuration, or documentation files\n3. **Run Simple Tests**: If possible, suggest or run basic tests to verify the issue\n4. **Use Additional Tools**: If the problem is complex, use the `sequentialthinking` MCP. For additional information, use the `Context7`, `fetch`, `deepwiki`, or `sentry` MCP as needed\n5. **Create Task**: Create a task execution plan following this format in  `TASKS.MD`\n6. **Ask User Permission**: Ask user permission before start fixing the error\n7. **Fix error**: Fix the error follow the task execution steps\n8. **Verify tasks execution**: Verify if the task and subtasks have been done, ✅ or ❌ subtasks after execute the task\n9. **Write task-execution-history**: Write task execution report follow the guidance defined in `TASKS.MD` and save it in `TASK_EXECUTE_HISTORY_FOLDER` with file name of `task-[Task Number].md`\n\n**Task creation format**\n```\n- [ ] [Number]. [Task Title]\n  - [Sub-task description 1]\n  - [Sub-task description 2]\n  - [Sub-task description 3]\n  - [Additional sub-tasks as needed]\n```\n\n**Checked/Uncheck task example**\n```\n- [X] [Number]. [Task Title]\n  - ✅ [Sub-task description 1]\n  - ❌ [Sub-task description 2] \n  - [Sub-task description 3]\n  - [Additional sub-tasks as needed]\n```\n\n**Requirements**:\n* Ask user to provide error message if you don't know what to fix\n* Analyze the root causes thoroughly before writing the task\n* Include at least one sub-task under each major task\n* Follow the exact format shown in the task examples\n* Focus on actionable solutions\n* Ensure the task addresses the underlying problem, not just the symptoms\n* Start with the task execution plan before fixing anything\n* Always ask the user’s permission before executing the plan\n* Read specs and steering document if need more detail about the project\n\n**File Path**\n* `SPECS_FOLDER` = .kiro/specs/<TARGET_SPEC>\n* `STEERING_FOLDER` = .kiro/steering/ \n* `TASK_EXECUTE_HISTORY_FOLDER` = <SPECS_FOLDER>/task-execute-history\n* `TASKS.MD` = <SPECS_FOLDER>/tasks.md\n* `DESIGN.MD` = <SPECS_FOLDER>/design.md\n* `REQUIREMENTS.MD` = <SPECS_FOLDER>/design.md\n"
  }
}