{
  "timestamp": "2025-09-11T11:58:53.661Z",
  "totalExecutionTime": 10148,
  "summary": {
    "overall": {
      "successRate": "66.7",
      "passed": 10,
      "failed": 5,
      "total": 15,
      "executionTime": 10148
    },
    "performance": {
      "successRate": "0.0",
      "passed": 0,
      "failed": 3,
      "totalExecutionTime": 104,
      "tests": [
        {
          "name": "Frontend Test Suite Performance",
          "status": "failed",
          "description": "Validate frontend test suite completes within 30 seconds",
          "duration": 48,
          "target": 30000,
          "withinTarget": true,
          "error": "sh: timeout: command not found\n",
          "output": ""
        },
        {
          "name": "Backend Core Tests Performance",
          "status": "failed",
          "description": "Validate core backend tests complete within 15 seconds",
          "duration": 27,
          "target": 15000,
          "withinTarget": true,
          "error": "sh: timeout: command not found\n",
          "output": ""
        },
        {
          "name": "Environment Validation Performance",
          "status": "failed",
          "description": "Validate environment checks complete within 5 seconds",
          "duration": 29,
          "target": 5000,
          "withinTarget": true,
          "error": "sh: timeout: command not found\n",
          "output": ""
        }
      ]
    },
    "monitoring": {
      "successRate": "75.0",
      "passed": 3,
      "failed": 1,
      "tests": [
        {
          "name": "Performance Monitor Functionality",
          "status": "passed",
          "description": "Test that performance monitoring system is functional",
          "output": "✓ Performance monitor functional"
        },
        {
          "name": "Error Tracking System",
          "status": "passed",
          "description": "Test that error tracking system works",
          "output": "✓ Error tracking system functional"
        },
        {
          "name": "Database Performance Monitoring",
          "status": "failed",
          "description": "Test that database performance monitoring works",
          "error": "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n    from testing.database_isolation import DatabaseTestIsolation; isolation = DatabaseTestIsolation(None); print('✓ Database monitoring functional')\n                                                                              ~~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"/Users/cheneyshih/Documents/GitHub/MedicalDeviceRegulationAgent/medical-device-regulatory-assistant/backend/testing/database_isolation.py\", line 44, in __init__\n    self.db_manager = db_manager or get_database_manager()\n                                    ~~~~~~~~~~~~~~~~~~~~^^\n  File \"/Users/cheneyshih/Documents/GitHub/MedicalDeviceRegulationAgent/medical-device-regulatory-assistant/backend/database/connection.py\", line 244, in get_database_manager\n    raise RuntimeError(\"Database manager not initialized\")\nRuntimeError: Database manager not initialized\n",
          "output": ""
        },
        {
          "name": "Quality Metrics Collection",
          "status": "passed",
          "description": "Test that quality metrics can be collected",
          "output": "✓ Quality metrics: CPU 0.0%, Memory 63.9%, Collection time 0.000s"
        }
      ]
    },
    "environment": {
      "successRate": "100.0",
      "passed": 4,
      "failed": 0,
      "tests": [
        {
          "name": "Node.js Version Check",
          "status": "passed",
          "description": "Validate Node.js version is appropriate",
          "output": "v20.19.3"
        },
        {
          "name": "Python Version Check",
          "status": "passed",
          "description": "Validate Python version is appropriate",
          "output": "Python 3.12.2"
        },
        {
          "name": "pnpm Installation",
          "status": "passed",
          "description": "Validate pnpm is installed and functional",
          "output": "10.15.0"
        },
        {
          "name": "Poetry Installation",
          "status": "passed",
          "description": "Validate Poetry is installed and functional",
          "output": "Poetry (version 1.8.5)"
        }
      ]
    },
    "packageManagers": {
      "successRate": "75.0",
      "passed": 3,
      "failed": 1,
      "tests": [
        {
          "name": "Frontend pnpm Lock File",
          "status": "passed",
          "description": "Validate pnpm lock file exists for frontend",
          "output": "pnpm-lock.yaml"
        },
        {
          "name": "Backend Poetry Lock File",
          "status": "passed",
          "description": "Validate Poetry lock file exists for backend",
          "output": "poetry.lock"
        },
        {
          "name": "Frontend Package Manager Usage",
          "status": "passed",
          "description": "Validate pnpm is specified as package manager",
          "output": "✓ pnpm specified in package.json"
        },
        {
          "name": "Backend Dependency Management",
          "status": "failed",
          "description": "Validate Poetry configuration is valid",
          "error": "Error: Declared README file does not exist: README.md\n",
          "output": ""
        }
      ]
    }
  },
  "recommendations": [
    {
      "category": "Quality",
      "priority": "High",
      "issue": "Overall success rate 66.7% indicates quality issues",
      "action": "Address failing validation tests"
    },
    {
      "category": "Monitoring",
      "priority": "Medium",
      "issue": "Performance monitoring system issues detected",
      "action": "Fix monitoring and regression detection systems"
    },
    {
      "category": "Package Management",
      "priority": "Low",
      "issue": "Package manager standardization issues",
      "action": "Ensure consistent use of pnpm and Poetry"
    }
  ]
}