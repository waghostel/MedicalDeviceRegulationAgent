"""Initial database schema

Revision ID: 7e8f40e38d8f
Revises: 
Create Date: 2025-09-01 23:18:53.806798

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7e8f40e38d8f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('google_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('device_type', sa.String(length=255), nullable=True),
    sa.Column('intended_use', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'IN_PROGRESS', 'COMPLETED', name='projectstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_user_id'), 'projects', ['user_id'], unique=False)
    op.create_table('agent_interactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('agent_action', sa.String(length=255), nullable=False),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('sources', sa.JSON(), nullable=True),
    sa.Column('reasoning', sa.Text(), nullable=True),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_interactions_agent_action'), 'agent_interactions', ['agent_action'], unique=False)
    op.create_index(op.f('ix_agent_interactions_project_id'), 'agent_interactions', ['project_id'], unique=False)
    op.create_index(op.f('ix_agent_interactions_user_id'), 'agent_interactions', ['user_id'], unique=False)
    op.create_table('device_classifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('device_class', sa.Enum('CLASS_I', 'CLASS_II', 'CLASS_III', name='deviceclass'), nullable=True),
    sa.Column('product_code', sa.String(length=10), nullable=True),
    sa.Column('regulatory_pathway', sa.Enum('FIVE_TEN_K', 'PMA', 'DE_NOVO', name='regulatorypathway'), nullable=True),
    sa.Column('cfr_sections', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('reasoning', sa.Text(), nullable=True),
    sa.Column('sources', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_classifications_project_id'), 'device_classifications', ['project_id'], unique=False)
    op.create_table('predicate_devices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('k_number', sa.String(length=20), nullable=False),
    sa.Column('device_name', sa.String(length=500), nullable=True),
    sa.Column('intended_use', sa.Text(), nullable=True),
    sa.Column('product_code', sa.String(length=10), nullable=True),
    sa.Column('clearance_date', sa.Date(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('comparison_data', sa.JSON(), nullable=True),
    sa.Column('is_selected', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_predicate_devices_k_number'), 'predicate_devices', ['k_number'], unique=False)
    op.create_index(op.f('ix_predicate_devices_project_id'), 'predicate_devices', ['project_id'], unique=False)
    op.create_table('project_documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('document_type', sa.String(length=100), nullable=True),
    sa.Column('content_markdown', sa.Text(), nullable=True),
    sa.Column('document_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_documents_project_id'), 'project_documents', ['project_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_project_documents_project_id'), table_name='project_documents')
    op.drop_table('project_documents')
    op.drop_index(op.f('ix_predicate_devices_project_id'), table_name='predicate_devices')
    op.drop_index(op.f('ix_predicate_devices_k_number'), table_name='predicate_devices')
    op.drop_table('predicate_devices')
    op.drop_index(op.f('ix_device_classifications_project_id'), table_name='device_classifications')
    op.drop_table('device_classifications')
    op.drop_index(op.f('ix_agent_interactions_user_id'), table_name='agent_interactions')
    op.drop_index(op.f('ix_agent_interactions_project_id'), table_name='agent_interactions')
    op.drop_index(op.f('ix_agent_interactions_agent_action'), table_name='agent_interactions')
    op.drop_table('agent_interactions')
    op.drop_index(op.f('ix_projects_user_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###